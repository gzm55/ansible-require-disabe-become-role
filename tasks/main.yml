---
- name: try force disable become
  run_once: True
  when:
  - inventory_hostname == ansible_play_hosts[0]
  - groups.all
    | map('extract', hostvars, 'ansible_become')
    | select('defined')
    | map('bool')
    | difference([False])
    | list
    | length == 1
    or ( local_ansible_config['privilege_escalation/become_allow_same_user']
         | d(False)
         | bool == False
         and groups.all
             | map('extract', hostvars, 'ansible_become_user')
             | reject('defined')
             | list
             | length == 0 )
  become: False
  become_user: --FAKE::::USER={{ lookup('pipe', 'echo $PPID') }}
  vars:
  - ansible_become: False
  - ansible_become_user: --FAKE::::USER={{ lookup('pipe', 'echo $PPID') }}
  assert:
    that: "ansible_become == False or
           ( local_ansible_config['privilege_escalation/become_allow_same_user']
             | d(False)
             | bool == False and
             ansible_become_user == ('--FAKE::::USER=' + lookup('pipe', 'echo $PPID'))
           )
          "

- name: current local user
  when: ansible_local_user is not defined
  run_once: True
  set_fact:
    ansible_local_user: "{{ require_local_command['PATH='+lookup('env','PATH')|quote]['id']
                                | ternary(lookup('pipe', 'id -un'), '')
                                | d(require_local_command['PATH='+lookup('env','PATH')|quote]['whoami']
                                    | ternary(lookup('pipe', 'whoami'), '')
                                    , True)
                                | d(lookup('env', 'USER'), True) }}"
  failed_when: ansible_local_user == ''
