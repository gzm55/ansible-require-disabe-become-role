---
language: python
python: "2.7"

# Use the new container infrastructure
sudo: false

# Install ansible
addons:
  apt:
    packages:
    - python-pip

install:
  # Install ansible
  - pip install ansible

  # Install python module and role dependencies
  - test -f requirements.txt && pip install -r requirements.txt
  - test -f requirements.yml && ansible-galaxy install -p tests/roles -r requirements.yml

  # Check ansible version
  - ansible --version

script:
  - set -e

  # Basic role syntax check
  - printf '[defaults]\nroles_path=../' >ansible.cfg
  - ansible-playbook tests/test.yml -i tests/inventory --syntax-check

  # Should success cases
  - ansible-playbook tests/test.yml -i tests/inventory
  - ansible-playbook tests/test.yml -i tests/inventory -e ansible_become=y
  - ansible-playbook tests/test.yml -i tests/inventory -e ansible_become_user=x
  - printf '[defaults]\nroles_path=../\n[privilege_escalation]\nbecome_allow_same_user=yes' >ansible.cfg
  - ansible-playbook tests/test.yml -i tests/inventory
  - ansible-playbook tests/test.yml -i tests/inventory -e ansible_become_user=x

  # Should fail cases
  - printf '[defaults]\nroles_path=../' >ansible.cfg
  - true && ! ansible-playbook tests/test.yml -i tests/inventory -e ansible_become=y -e ansible_become_user=x
  - printf '[defaults]\nroles_path=../\n[privilege_escalation]\nbecome_allow_same_user=yes' >ansible.cfg
  - true && ! ansible-playbook tests/test.yml -i tests/inventory -e ansible_become=y
  - true && ! ansible-playbook tests/test.yml -i tests/inventory -e ansible_become=y -e ansible_become_user=x

#notifications:
#  webhooks: https://galaxy.ansible.com/api/v1/notifications/
